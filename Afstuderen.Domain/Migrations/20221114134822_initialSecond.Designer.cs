// <auto-generated />
using System;
using Afstuderen.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Afstuderen.Domain.Migrations
{
    [DbContext(typeof(AfstudeerContext))]
    [Migration("20221114134822_initialSecond")]
    partial class initialSecond
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Afstuderen.Domain.Bedrijf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bedrijven");
                });

            modelBuilder.Entity("Afstuderen.Domain.Begeleider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OpdrachtId")
                        .HasColumnType("int");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpdrachtId");

                    b.ToTable("Begeleiders");
                });

            modelBuilder.Entity("Afstuderen.Domain.Opdracht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpdrachtgeverId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpdrachtgeverId");

                    b.ToTable("Opdrachten");
                });

            modelBuilder.Entity("Afstuderen.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OpdrachtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpdrachtId");

                    b.ToTable("Studenten");
                });

            modelBuilder.Entity("Afstuderen.Domain.Begeleider", b =>
                {
                    b.HasOne("Afstuderen.Domain.Opdracht", null)
                        .WithMany("Begeleiders")
                        .HasForeignKey("OpdrachtId");
                });

            modelBuilder.Entity("Afstuderen.Domain.Opdracht", b =>
                {
                    b.HasOne("Afstuderen.Domain.Bedrijf", "Opdrachtgever")
                        .WithMany()
                        .HasForeignKey("OpdrachtgeverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opdrachtgever");
                });

            modelBuilder.Entity("Afstuderen.Domain.Student", b =>
                {
                    b.HasOne("Afstuderen.Domain.Opdracht", null)
                        .WithMany("Afstudeerders")
                        .HasForeignKey("OpdrachtId");
                });

            modelBuilder.Entity("Afstuderen.Domain.Opdracht", b =>
                {
                    b.Navigation("Afstudeerders");

                    b.Navigation("Begeleiders");
                });
#pragma warning restore 612, 618
        }
    }
}
